// Version: 1.2

syntax = "proto3";
import "version.proto";
import "utils.proto";
import "motor.proto";
import "geometry.proto";

enum ArmMotor {
	ARM_MOTOR_UNDEFINED = 0;
	SWIVEL = 1;
	SHOULDER = 2;
	ELBOW = 3;
	WRIST = 4;
}

message ArmData {
	Coordinates currentPosition = 1;
	Coordinates targetPosition = 2;

	MotorData base = 3;
	MotorData shoulder = 4;
	MotorData elbow = 5;

	Version version = 6;
}

message ArmCommand {
	// General commands
	bool stop = 1;
	bool calibrate = 2;

	// Move individual motors
	MotorCommand swivel = 3;
	MotorCommand shoulder = 4;
	MotorCommand elbow = 5;

	// Needed for IK: If the wrist-lift moves, we need to re-calculate IK to keep the end-effector
	// stationary. See /Arm/src/ik/README.md in the Arm-Firmware repository.
	MotorCommand gripper_lift = 6;

	// Can be removed in future versions
	float ik_x = 7;
	float ik_y = 8;
	float ik_z = 9;

	// Custom actions
	bool jab = 10;

	Version version = 11;
}

message GripperData {
	MotorData lift = 1;
	MotorData rotate = 2;
	MotorData pinch = 3;

	Version version = 4;
	int32 servoAngle = 5;
	BoolState laserState = 6;
}

message GripperCommand {
	// General commands
	bool stop = 1;
	bool calibrate = 2;

	// Move individual motors
	MotorCommand lift = 3;
	MotorCommand rotate = 4;
	MotorCommand pinch = 5;

	// Custom actions
	bool open = 6;
	bool close = 7;
	bool spin = 8;

	Version version = 9;
	int32 servoAngle = 10;
	BoolState laserState = 11;
}
