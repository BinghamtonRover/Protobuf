// Version: 1.1

syntax = "proto3";
import "utils.proto";
import "version.proto";
import "geometry.proto";

enum CameraStatus {
	CAMERA_STATUS_UNDEFINED = 0;
	CAMERA_DISCONNECTED = 1;    /// The camera is not even on the rover
	CAMERA_ENABLED = 2;         /// The camera is actively streaming video
	CAMERA_DISABLED = 3;        /// Not streaming, but it can be enabled
	CAMERA_NOT_RESPONDING = 4;  /// Connected but not responding
	CAMERA_LOADING = 5;         /// Camera is still turning on
	FRAME_TOO_LARGE = 6;        /// The camera is reading too many pixels
	CAMERA_HAS_NO_NAME = 7;     /// The camera was not assigned a name
}

enum CameraName {
	CAMERA_NAME_UNDEFINED = 0;
	ROVER_FRONT = 1;
	ROVER_REAR = 2;
	AUTONOMY_DEPTH = 3;
	SUBSYSTEM1 = 4;
	SUBSYSTEM2 = 5;
	SUBSYSTEM3 = 6;
	BOTTOM_LEFT = 7;
	BOTTOM_RIGHT = 8;
}

enum TargetDetectionType {
	DETECTION_TYPE_UNDEFINED = 0;
	ARUCO = 1;
	HAMMER = 2;
	BOTTLE = 3;
}

/// Details about a specific camera.
message CameraDetails {
	/// The name of the camera.
	CameraName name = 1;

	/// The width and height of the image frame.
	int32 resolution_width = 2;
	int32 resolution_height = 3;

	/// The quality of the frame, as a percentage. Used for JPG compression.
	int32 quality = 4;

	/// The amount of frames per second. Eg, 60 FPS or 24 FPS.
	int32 fps = 5;

	/// The status of this camera.
	CameraStatus status = 6;

	bool autofocus = 7;
	
	int32 zoom = 8;

	int32 pan = 9;

	int32 tilt = 10;

	int32 focus = 11;

	float diagonal_fov = 12;

	float horizontal_fov = 13;

	float vertical_fov = 14;

	/// The width of the image data streamed
	int32 stream_width = 15;
	/// The height of the image data streamed
	int32 stream_height = 16;
}

message Aruco3DTargetResult {
	Pose3d bestCameraToTarget = 1;
	double bestReprojectionError = 2;
	optional Pose3d alternateCameraToTarget = 3;
	optional double alternateReprojectionError = 4;
}

message TrackedTarget {
	TargetDetectionType detectionType = 1;

	int32 tagId = 2;
	float yaw = 3;
	float pitch = 4;
	float area = 5;
	float areaPercent = 6;
	int32 centerX = 7;
	int32 centerY = 8;
	repeated int32 corners = 9;
	Aruco3DTargetResult pnpResult = 10;
}

message DetectionResult {
	Version version = 1;
	CameraName camera = 2;
	BoolState hasAruco = 3;
	repeated TrackedTarget arucoDetections = 4;
}

/// Reports data about a camera.
message VideoData {
	/// The unique ID of this camera.
	string id = 1;

	/// The details for this camera.
	CameraDetails details = 2;

	/// The latest frame from this camera.
	bytes frame = 3;

	Version version = 4;

	string imagePath = 5;
}

/// Make changes to a camera feed.
message VideoCommand {
	/// The unique ID of the camera to change.
	string id = 1;

	/// The new details for this camera.
	/// 
	/// If changing [CameraDetails.status], you cannot set it to [CameraStatus.DISCONNECTED].
	CameraDetails details = 2;

	Version version = 3;

	bool takeSnapshot = 4;
}
